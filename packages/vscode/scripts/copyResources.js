// generated by copilot
const fs = require("fs");
const path = require("path");

function copyFileSync(source, target) {
  const targetFile = target;

  // ターゲットディレクトリが存在しない場合は作成
  const targetDir = path.dirname(targetFile);
  if (!fs.existsSync(targetDir)) {
    fs.mkdirSync(targetDir, { recursive: true });
  }

  fs.copyFileSync(source, targetFile);
}

function copyFolderRecursiveSync(source, target) {
  // ターゲットフォルダが存在しない場合は作成
  const targetFolder = path.join(target, path.basename(source));
  if (!fs.existsSync(targetFolder)) {
    fs.mkdirSync(targetFolder, { recursive: true });
  }

  // ソースディレクトリ内のファイルとサブディレクトリをコピー
  if (fs.lstatSync(source).isDirectory()) {
    const items = fs.readdirSync(source);
    items.forEach((item) => {
      const curSource = path.join(source, item);
      if (fs.lstatSync(curSource).isDirectory()) {
        copyFolderRecursiveSync(curSource, targetFolder);
      } else {
        copyFileSync(curSource, path.join(targetFolder, item));
      }
    });
  }
}

// カレントディレクトリ
const currentDir = process.cwd();

// コピー元のパス
const readmeSource = path.resolve(currentDir, "../../README.md");
const changelogSource = path.resolve(currentDir, "../../CHANGELOG.md");
const licenseSource = path.resolve(currentDir, "../../LICENSE");
const imagesSource = path.resolve(currentDir, "../../images");

// コピー先のパス
const readmeTarget = path.join(currentDir, "README.md");
const changelogTarget = path.join(currentDir, "CHANGELOG.md");
const licenseTarget = path.join(currentDir, "LICENSE");

// ファイルとディレクトリのコピー
copyFileSync(readmeSource, readmeTarget);
copyFileSync(changelogSource, changelogTarget);
copyFileSync(licenseSource, licenseTarget);
copyFolderRecursiveSync(imagesSource, currentDir);

console.log("Resources copied successfully.");
